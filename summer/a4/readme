======================
a4
31/7/17
dominick hera
0943778
dhera@mail.uoguelph.ca
======================

======
to run
======

./bin/run ./assets/games.csv

==========
to compile
==========

type 'make' to run the makeFile

=============
description
=============

- the program is a basic Point of Sale system that utilizes a binary search tree for storing all the primary information which the program pulls all the information from, using a hash table to store only the Product ID's when the user attempts to add a product by that ID in which the program will call back to the binary search tree to find the information regarding that product ID and pulling it up. A doubly linked list is used to handle the users shopping cart or invoice which they can add to or remove from without any issues.


====================
known limitations
====================
- 

=========
testing
=========
- had major issues with binary tree deletion and had to completely rewrite the deletion function to accomodate all four cases  (2 children/ 1 l/r child/ no children), had originally used findNode function to do this but it was much easier if i had the parent of the node i want to delete so I wrote part of the findNode function into the delete function to do the same thing but also find the parent of that same node


=================
avl binary tree 
=================
- the binary tree in this project 

============
hash table
============
- 

====================
doubly linked list
====================
- 

============
references
============
- 